import 'package:flutter/material.dart';
import 'package:material_design_icons_flutter/material_design_icons_flutter.dart';

abstract class InvoiceDetailsBottomsheet {
  static BottomSheet bottomSheet(BuildContext context, List<dynamic> items) {
    final theme = Theme.of(context);
    return BottomSheet(
      onClosing: () {}, // Required callback, but we handle closing manually
      builder: (BuildContext context) {
        return Container(
          height:
              MediaQuery.of(context).size.height * 0.95, // Almost full-screen
          padding: const EdgeInsets.all(16.0),
          child: Stack(
            children: [
              SingleChildScrollView(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const SizedBox(height: 34),
                    // Invoice Details
                    Text(
                      'Invoice Details',
                      style: theme.textTheme.titleLarge
                          ?.copyWith(fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 10),
                    Text('Invoice Number: INV#0001',
                        style: theme.textTheme
                            .bodyLarge), // Each invoice generated by a user should be unique
                    Text('Invoice Date: 12-Oct-2024',
                        style: theme.textTheme.bodyLarge),
                    // Text('Due Date: 19-Oct-2024', style: theme.textTheme.bodyLarge),
                    Text('Payment Method: Cash',
                        style: theme.textTheme.bodyLarge),

                    const SizedBox(height: 20),

                    // Client Details
                    Text(
                      'Client Details',
                      style: theme.textTheme.titleLarge
                          ?.copyWith(fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 10),
                    Text('Client Name: ABC Corporation/John Doe',
                        style: theme.textTheme.bodyLarge),
                    // Text('Contact Person: John Doe',
                    //     style: theme.textTheme.bodyLarge),
                    Text('Address: 123, Street Name, City, ZIP',
                        style: theme.textTheme.bodyLarge),
                    // Text('Shipping Address: 456, Another St, City, ZIP',
                    //     style: theme.textTheme.bodyLarge),
                    Text('Email: john.doe@example.com',
                        style: theme.textTheme.bodyLarge),
                    Text('Phone: +91 9876543210',
                        style: theme.textTheme.bodyLarge),
                    // Text('GSTIN: 27AAAAA0000A1Z5', style: theme.textTheme.bodyLarge),
                    // Text('PAN Number: ABCDE1234F', style: theme.textTheme.bodyLarge),

                    const SizedBox(height: 20),

                    // Item Details
                    Text(
                      'Item Details',
                      style: theme.textTheme.titleLarge
                          ?.copyWith(fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 10),
                    SingleChildScrollView(
                      scrollDirection: Axis.horizontal,
                      child: DataTable(
                        // decoration: BoxDecoration(border: Border.all()),
                        border: TableBorder.symmetric(
                            inside: BorderSide(
                                color: Colors.white.withOpacity(0.3))),
                        columnSpacing: 0,
                        headingRowColor: WidgetStateProperty.all(
                          // theme.colorScheme.primaryContainer,
                          Colors.white12,
                        ),
                        columns: [
                          DataColumn(
                            label: Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 10),
                              child: Text('S.No',
                                  style: theme.textTheme.bodyLarge),
                            ),
                          ),
                          DataColumn(
                            label: Padding(
                              padding: const EdgeInsets.symmetric(
                                horizontal: 10,
                              ),
                              child: Text(
                                'Item',
                                style: theme.textTheme.bodyMedium,
                              ),
                            ),
                          ),
                          DataColumn(
                            label: Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 10),
                              child: Text('Quantity',
                                  style: theme.textTheme.bodyMedium),
                            ),
                          ),
                          DataColumn(
                            label: Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 10),
                              child: Text('Unit Price',
                                  style: theme.textTheme.bodyMedium),
                            ),
                          ),
                          DataColumn(
                            label: Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 10),
                              child: Text('Tax',
                                  style: theme.textTheme.bodyMedium),
                            ),
                          ),
                          DataColumn(
                            label: Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 10),
                              child: Text('Discount',
                                  style: theme.textTheme.bodyMedium),
                            ),
                          ),
                          DataColumn(
                            label: Padding(
                              padding:
                                  const EdgeInsets.symmetric(horizontal: 10),
                              child: Text('Total',
                                  style: theme.textTheme.bodyMedium),
                            ),
                          ),
                        ],
                        rows: items.asMap().entries.map((item) {
                          int serialNo = item.key + 1;
                          return DataRow(cells: [
                            DataCell(
                              Container(
                                padding:
                                    const EdgeInsets.symmetric(horizontal: 10),
                                alignment: Alignment.center,
                                child: Text(
                                  "$serialNo",
                                  // "0",
                                  style: theme.textTheme.bodySmall,
                                  overflow: TextOverflow.ellipsis,
                                ),
                              ),
                            ),
                            DataCell(
                              Container(
                                padding:
                                    const EdgeInsets.symmetric(horizontal: 10),
                                alignment: Alignment.center,
                                child: Text(
                                  item.value['item'],
                                  style: theme.textTheme.bodySmall,
                                  overflow: TextOverflow.ellipsis,
                                ),
                              ),
                            ),
                            DataCell(
                              Container(
                                padding:
                                    const EdgeInsets.symmetric(horizontal: 10),
                                alignment: Alignment.center,
                                child: Text(item.value['quantity'].toString(),
                                    style: theme.textTheme.bodySmall),
                              ),
                            ),
                            DataCell(
                              Container(
                                padding:
                                    const EdgeInsets.symmetric(horizontal: 10),
                                alignment: Alignment.center,
                                child: Text('â‚¹${item.value['unitPrice']}',
                                    style: theme.textTheme.bodySmall),
                              ),
                            ),
                            DataCell(
                              Container(
                                padding:
                                    const EdgeInsets.symmetric(horizontal: 10),
                                alignment: Alignment.center,
                                child: Text('${item.value['tax']}%',
                                    style: theme.textTheme.bodySmall),
                              ),
                            ),
                            DataCell(
                              Container(
                                padding:
                                    const EdgeInsets.symmetric(horizontal: 10),
                                alignment: Alignment.center,
                                child: Text('${item.value['discount']}%',
                                    style: theme.textTheme.bodySmall),
                              ),
                            ),
                            DataCell(
                              Container(
                                padding:
                                    const EdgeInsets.symmetric(horizontal: 10),
                                alignment: Alignment.center,
                                child: Text('â‚¹${item.value['totalPrice']}',
                                    style: theme.textTheme.bodySmall),
                              ),
                            ),
                          ]);
                        }).toList(),
                      ),
                    ),

                    // Text('Item: Product A', style: theme.textTheme.bodyLarge),
                    // Text('Quantity: 2', style: theme.textTheme.bodyLarge),
                    // Text('Unit Price: â‚¹500', style: theme.textTheme.bodyLarge),
                    // Text('Tax: 18%', style: theme.textTheme.bodyLarge),
                    // Text('Discount: 10%', style: theme.textTheme.bodyLarge),
                    // Text('Total Price: â‚¹900', style: theme.textTheme.bodyLarge),

                    const SizedBox(height: 20),

                    // Tax Details
                    // Text(
                    //   'Tax Details',
                    //   style: theme.textTheme.titleLarge
                    //       ?.copyWith(fontWeight: FontWeight.bold),
                    // ),
                    // const SizedBox(height: 10),
                    // Text('Total Tax: â‚¹162', style: theme.textTheme.bodyLarge),
                    // Text('Total Taxable Amount: â‚¹738',
                    //     style: theme.textTheme.bodyLarge),

                    // const SizedBox(height: 20),

                    // Summary
                    Text(
                      'Summary',
                      style: theme.textTheme.titleLarge
                          ?.copyWith(fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 10),
                    Text('Subtotal: â‚¹900', style: theme.textTheme.bodyLarge),
                    Text('Discount: â‚¹90', style: theme.textTheme.bodyLarge),
                    Text('Total Tax: â‚¹162', style: theme.textTheme.bodyLarge),
                    Text('Shipping: â‚¹50', style: theme.textTheme.bodyLarge),
                    Text('Grand Total: â‚¹1,022',
                        style: theme.textTheme.bodyLarge),

                    const SizedBox(height: 20),

                    // Payment Details
                    // Text(
                    //   'Payment Details',
                    //   style: theme.textTheme.titleLarge
                    //       ?.copyWith(fontWeight: FontWeight.bold),
                    // ),
                    // const SizedBox(height: 10),
                    // Text('Payment Method: Bank Transfer',
                    //     style: theme.textTheme.bodyLarge),
                    // Text('Payment Status: Unpaid',
                    //     style: theme.textTheme.bodyLarge),

                    // const SizedBox(height: 20),

                    // Additional Notes
                    Text(
                      'Notes:',
                      style: theme.textTheme.titleLarge
                          ?.copyWith(fontWeight: FontWeight.bold),
                    ),
                    const SizedBox(height: 10),
                    Text('Payment should be completed within 30 days.',
                        style: theme.textTheme.bodyLarge),
                  ],
                ),
              ),
              // Close Button
              Align(
                alignment: Alignment.topRight,
                child: IconButton(
                  icon: Icon(MdiIcons.closeCircle),
                  onPressed: () {
                    Navigator.of(context).pop();
                  },
                ),
              ),
            ],
          ),
        );
      },
    );
  }
}
